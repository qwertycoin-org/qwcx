name: "Build, Check & Deploy"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  QT_VERSION: 5.14.1

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {
              name: "Android (Release, multiabi)",
              os: "ubuntu-latest",
              commands: {
                bootstrap: bash scripts/ci/linux_android.sh,
                configure: 'cmake
                  -DCMAKE_BUILD_TYPE=Release
                  -DCMAKE_FIND_ROOT_PATH=$GITHUB_WORKSPACE/build/Qt5/$QT_VERSION/android
                  -DCMAKE_TOOLCHAIN_FILE=$HOME/.android/sdk/ndk/21.0.6113669/build/cmake/android.toolchain.cmake
                  -DANDROID_ABI:STRING=x86
                  -DANDROID_BUILD_ABI_arm64-v8a:BOOL=ON
                  -DANDROID_BUILD_ABI_armeabi-v7a:BOOL=ON
                  -DANDROID_BUILD_ABI_x86:BOOL=ON
                  -DANDROID_BUILD_ABI_x86_64:BOOL=OFF
                  -DANDROID_NATIVE_API_LEVEL:STRING=21
                  -DANDROID_NDK=$HOME/.android/sdk/ndk/21.0.6113669
                  -DANDROID_PLATFORM=android-21
                  -DANDROID_SDK=$HOME/.android/sdk
                  -DANDROID_SDK_PLATFORM=android-21
                  -DANDROID_STL=c++_shared
                  -DANDROID_TOOLCHAIN=clang
                  -DQT5_DOWNLOAD_VERSION=$QT_VERSION
                  -B $GITHUB_WORKSPACE/build
                  -S $GITHUB_WORKSPACE',
                build: cd $GITHUB_WORKSPACE/build && cmake --build . --config Release --target all,
                check: cd $GITHUB_WORKSPACE/build && ctest -C Release
              }
          }
          - {
              name: "Linux (Release, 64-bit)",
              os: "ubuntu-latest",
              commands: {
                bootstrap: bash scripts/ci/linux.sh,
                configure: 'cmake
                  -DCMAKE_BUILD_TYPE=Release
                  -DCMAKE_TOOLCHAIN_FILE=$GITHUB_WORKSPACE/cmake/polly/gcc-8-cxx17.cmake
                  -DQT5_DOWNLOAD_VERSION=$QT_VERSION
                  -B $GITHUB_WORKSPACE/build
                  -S $GITHUB_WORKSPACE',
                build: cd $GITHUB_WORKSPACE/build && cmake --build . --config Release --target all,
                check: cd $GITHUB_WORKSPACE/build && ctest -C Release
              }
          }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Checkout Submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Install Dependencies
        shell: bash
        run: ${{ matrix.config.commands.bootstrap }}
      - name: Configure
        run: ${{ matrix.config.commands.configure }}
      - name: Build
        run: ${{ matrix.config.commands.build }}
      - name: Check
        run: ${{ matrix.config.commands.check }}
      - name: Deploy
        run: cmake --version
