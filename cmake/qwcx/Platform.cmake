message(STATUS "CMAKE_SYSTEM_NAME: ${CMAKE_SYSTEM_NAME}") # system targeted by the build
message(STATUS "CMAKE_SYSTEM_VERSION: ${CMAKE_SYSTEM_VERSION}")
if(NOT ${CMAKE_SYSTEM_NAME} MATCHES "${CMAKE_HOST_SYSTEM_NAME}")
    # Print host system info if different from target system
    message(STATUS "CMAKE_HOST_SYSTEM_NAME: ${CMAKE_HOST_SYSTEM_NAME}") # system hosting the build
    message(STATUS "CMAKE_HOST_SYSTEM_VERSION: ${CMAKE_HOST_SYSTEM_VERSION}")
endif()

if(UNIX)
    if(${CMAKE_SYSTEM_NAME} MATCHES "Android")
        set(PROJECT_OS_NAME "android")
        set(PROJECT_OS_ANDROID TRUE)
    elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
        set(PROJECT_OS_NAME "linux")
        set(PROJECT_OS_LINUX TRUE)
    elseif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
        set(PROJECT_OS_NAME "macos")
        set(PROJECT_OS_MACOS TRUE)
    else()
        set(PROJECT_OS_NAME "posix")
        set(PROJECT_OS_POSIX TRUE)
    endif()
elseif(WIN32)
    set(PROJECT_OS_NAME "windows")
    set(PROJECT_OS_WINDOWS TRUE)
else()
    set(PROJECT_OS_NAME "unknown")
    set(PROJECT_OS_UNKNOWN TRUE)
endif()

if(PROJECT_OS_UNKNOWN)
    message(WARNING "Unable to detect OS!")
else()
    message(STATUS "Target OS: ${PROJECT_OS_NAME}")
endif()

if(ANDROID)
    set(ANDROID_SUPPORTED_ABIS armeabi-v7a arm64-v8a x86 x86_64)
    set(ANDROID_ENABLED_ABIS "")
    set(ANDROID_ENABLED_ABIS_COUNT 0)

    foreach(abi IN LISTS ANDROID_SUPPORTED_ABIS)
        if(${ANDROID_BUILD_ABI_${abi}})
            list(APPEND ANDROID_ENABLED_ABIS "${abi}")
        endif()
    endforeach()
    list(LENGTH ANDROID_ENABLED_ABIS ANDROID_ENABLED_ABIS_COUNT)

    if(ANDROID_ENABLED_ABIS_COUNT GREATER 1)
        set(PROJECT_ARCH_NAME "multiabi")
        set(PROJECT_ARCH_MULTIABI TRUE)
    else()
        string(TOUPPER "${ANDROID_ABI}" ANDROID_ABI_UPPERCASE)
        string(REPLACE "-" "_" ANDROID_ABI_UPPERCASE "${ANDROID_ABI_UPPERCASE}")

        set(PROJECT_ARCH_NAME "${ANDROID_ABI}")
        set(PROJECT_ARCH_${ANDROID_ABI_UPPERCASE} TRUE)
    endif()

    unset(ANDROID_SUPPORTED_ABIS)
    unset(ANDROID_ENABLED_ABIS)
    unset(ANDROID_ENABLED_ABIS_COUNT)
else()
    if(CMAKE_SIZEOF_VOID_P EQUAL 8)
        set(PROJECT_ARCH_NAME "x86_64")
        set(PROJECT_ARCH_X86_64 TRUE)
    elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)
        set(PROJECT_ARCH_NAME "x86")
        set(PROJECT_ARCH_X86 TRUE)
    else()
        set(PROJECT_ARCH_NAME "unknown")
        set(PROJECT_ARCH_UNKNOWN TRUE)
    endif()
endif()

if(PROJECT_ARCH_UNKNOWN)
    message(WARNING "Unable to detect target architecture!")
else()
    message(STATUS "Target arch: ${PROJECT_ARCH_NAME}")
endif()
